@model OrderForUpdateDto

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="SenderId" class="control-label"></label>
                <br>@Html.DropDownList("SenderId", new SelectList(ViewBag.customers as IEnumerable<CustomerDto>, "Id", "Address") as SelectList, new { @class = "form-control form-select" })
                <span asp-validation-for="SenderId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DestinationId" class="control-label"></label>
                <br>@Html.DropDownList("DestinationId", new SelectList(ViewBag.customers as IEnumerable<CustomerDto>, "Id", "Address") as SelectList, new { @class = "form-control form-select" })
                <span asp-validation-for="DestinationId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control form-select">
                    <option value="Processing">Processing</option>
                    <option value="InProgress">InProgress</option>
                    <option value="Completed">Completed</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
